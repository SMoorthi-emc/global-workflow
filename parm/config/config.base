#!/bin/ksh -x

########## config.base ##########
# Common to all steps

echo "BEGIN: config.base"

# Machine environment
export machine="@MACHINE@"

# EMC parallel or NCO production
export RUN_ENVIR=emc

# Account, queue, etc.
export ACCOUNT="@ACCOUNT@"
export QUEUE="@QUEUE@"
export QUEUE_ARCH="@QUEUE_ARCH@"

 export LEVS=128
 export LEVS=65

#export IAER=1111
#export iccn=2
#export iaerclm=.true.

# Project to use in mass store:
HPSS_PROJECT=emc-global

# Directories relative to installation areas:
export HOMEgfs=@HOMEgfs@
export PARMgfs=$HOMEgfs/parm
export FIXgfs=$HOMEgfs/fix
export USHgfs=$HOMEgfs/ush
export UTILgfs=$HOMEgfs/util
export EXECgfs=$HOMEgfs/exec
export SCRgfs=$HOMEgfs/scripts


########################################################################

# GLOBAL static environment parameters
export NWPROD="@NWPROD@"
export DMPDIR="@DMPDIR@"
export RTMFIX=$CRTM_FIX

# USER specific paths
export HOMEDIR="@HOMEDIR@"
export STMP="@STMP@"
export PTMP="@PTMP@"
export NOSCRUB="@NOSCRUB@"
export EXECBASE="@EXECBASE@"

# Base directories for various builds
export BASE_GIT="@BASE_GIT@"
#

# Utilities needed in the scripts (mostly post)
#if [ $machine = HERA ] ; then

# export NDATE="$NWPROD/util/exec/ndate"
# export NHOUR="$NWPROD/util/exec/nhour"
# export WGRIB="$NWPROD/util/exec/wgrib"
# export WGRIB2="/scratch3/NCEPDEV/nwprod/utils/wgrib2.v2.0.6c/wgrib2/wgrib2"
# export COPYGB="$NWPROD/util/exec/copygb"
# export COPYGB2="$NWPROD/util/exec/copygb2"
# export GRBINDEX="$NWPROD/util/exec/grbindex"
# export GRB2INDEX="$NWPROD/util/exec/grb2index"
# export GRBINDEX2="$NWPROD/util/exec/grb2index"
# export CNVGRIB="/apps/cnvgrib/1.4.0/bin/cnvgrib"
# export POSTGRB2TBL="/scratch1/NCEPDEV/nwprod/lib/g2tmpl/v1.5.0/sorc/params_grib2_tbl_new"

#fi

#export print_esmf=.true.
 export print_esmf=${print_esmf:-.false.}
 export ESMF_RUNTIME_PROFILE=ON
 export ESMF_RUNTIME_PROFILE_OUTPUT=SUMMARY
# Toggle to turn on/off GFS downstream processing.
export DO_BUFRSND=YES    # BUFR sounding products
export DO_GEMPAK=NO      # GEMPAK products
export DO_AWIPS=NO       # AWIPS products
export WAFSF=NO          # WAFS products

# NO for retrospective parallel; YES for real-time parallel
export REALTIME=NO


# some available switches
# -----------------------
 export RUN_CCPP=YES                # turn on ccpp physics
 export HYPT=on                     # turn on hyper threading
 export cplflx=.true.               # turn on cupule model 
 export CPLD_APP=YES                # use coupled app
 export INLINE_POST=YES             # turn on inline post
 export USE_COLDSTART=.false.       # comment this line to turn on cold start step
#export frac_grid=.true.            # uncomment to turn on fractional grid
 export mediator=cmeps              # comment this line for nems mediator
 export CICE=CICE6                  # comment this line to rutn on CIC5
#export ICE_WW3_OVERLAP=YES         # uncomment this line to overlap ww3 and cice pes (with CICE6 only)

 export CICE=${CICE:-CICE5}
 export mediator=${mediator:-nems}
#
# I/O QUILTING, true--use Write Component; false--use GFDL FMS
# if quilting=true, choose OUTPUT_GRID as cubed_sphere_grid in netcdf or gaussian_grid
# if gaussian_grid, set OUTPUT_FILE for nemsio or netcdf
 export QUILTING=.true.
 export OUTPUT_GRID=gaussian_grid
 export OUTPUT_FILE=netcdf

# uncomment to turn on coupled wave
#export cplwav=.true.
#export cplwav2atm=.true.
#export CPLDWAV=YES

 export USE_COLDSTART=${USE_COLDSTART:-.true.}
#export NETCDF_TYPE=\"pnetcdf\"

export OCNRES=${OCNRES:-'025'}
export ICERES=$OCNRES
if [ $OCNRES = '025' ] ; then
 export NX_GLB=1440
 export NY_GLB=1080
 export BLCKX=60
 export BLCKX=120
 export BLCKX=30
elif [ $OCNRES = '005' ] ; then
 export NX_GLB=720
 export N_GLB=576
 export BLCKX=60
elif [ $OCNRES = '100' ] ; then
 export NX_GLB=360
 export NY_GLB=320
 export BLCKX=60
fi

#export DumpFields_MED=true
#export DumpFields_ATM=true
#export DumpFields_OCN=true
#export DumpFields_ICE=true

 RUN_CCPP=${RUN_CCPP:-NO}
 if [ $RUN_CCPP = NO ] ; then IPD='_ipd' ; fi
#IPD=n
 IPD=${IPD:-""}

export cplflx=${cplflx:-.false.}
export CPLD_APP=${CPLD_APP:-NO}
export INLINE_POST=${INLINE_POST:-NO}

# For coupled
if [ $CICE = CICE5 ] ; then
 export FIXcice=$HOMEgfs/fix/fix_cice5
else
 export FIXcice=$HOMEgfs/fix/fix_cice6/$ICERES
fi
export FIXmom=$HOMEgfs/fix/fix_mom6
export FIXgrid=$HOMEgfs/fix/fix_fv3grid
# For coupled ocnpost
export OCNFIXDIR=$HOMEgfs/fix/fix_ocnice
export OCNPOSTsrc=$HOMEgfs/fix/ocean_ice_post
#
#For WW3
 export USE_WAVES=True
#export ww3_grid=glo_30m
 export ww3_grid=${ww3_grid:-gwes_30m}
export FIX_WW3=${FIX_WW3:-$NOSCRUB/WW3_input_data}
export ww3_grid=${ww3_grid:-'glo_30m'}
export USE_WAVES=${USE_WAVES:-False}
export WAVE_METHOD=${WAVE_METHOD:-\"SURFACE_BANDS\"}
#export MOM6_RIVER_RUNOF=True
export MOM6_RIVER_RUNOF=${MOM6_RIVER_RUNOF:-False}


#g0nosc=/gpfs/dell2/emc/modeling/noscrub
export FIX_LAKE_ORO=$NOSCRUB/oro_lake
export use_lake_oro=YES
export use_lake_oro=NO

#export NSOUT=1
 export NSOUT=${NSOUT:-0}

#export LINK_OCN_FILES=NO
if [ $cplflx = .true. ] ; then
 app=ufs-s2s-model
#app=ufs-s2s-model_feb25
#app=ufs-s2s-model_mar30
#app=ufs-s2s-model_feb25_sav
#export appdir=cfv3_git_jan08
#export SCRDIR=$HOMEgfs/scripts
#export FORECASTSH="$SCRDIR/exglobal_fcst_emcufs.sh_feb02"    # with    UGW
#export appdir=cfv3_git_jan31
 export appdir=cfv3_git_may02
 export appdir=cfv3_git_Jun04_2             # Venus
 export appdir=cfv3_git_Jun23               # Mars
#export appdir=cfv3_git_Jul17
 export appdir=cfv3_git_July20
#export appdir=cfv3_git_Aug01
 export appdir=cfv3_git_Aug08
 if [ $CICE = CICE6 ] ; then
   export appdir=cfv3_git_Aug12_cice6
   export appdir=cfv3_git_Sep15_cice6
 fi
#export appdir=s2s_orig
#export appdir=cfv3_git_may19_hera
#export appdir=cfv3_git_Jun16
#appdir=cfv3_git_jan31_mars/cfv3_git_jan31
#export cpl=.true.
 export CPLDFV3_MOM6_CICE=YES
 export Restart_Prefix='MOM.res'

#export cplwav=.true.
#export cplwav2atm=.true.
#export CPLDWAV=YES

 export IC_FROM=bench1
 if [ $IC_FROM = bench1 ] ; then export USE_IDEAL_AGE_TRACER=True ; fi
 export NUMOM=YES
 export CPLD_APP=YES
elif [ $CPLD_APP = YES ] ; then
 app=ufs-s2s-model
#app=ufs-s2s-model_feb25
#app=ufs-s2s-model_mar30
#export appdir=cfv3_git_jan08
#export SCRDIR=$HOMEgfs/scripts
#export FORECASTSH="$SCRDIR/exglobal_fcst_emcufs.sh_feb02"    # with    UGW
#export appdir=cfv3_git_jan31
 export appdir=cfv3_git_may02
 export appdir=cfv3_git_Jun04_2             # Venus
 export appdir=cfv3_git_Jun23               # Mars
#export appdir=cfv3_git_Jul17
 export appdir=cfv3_git_July20
#export appdir=cfv3_git_Aug01
 export appdir=cfv3_git_Aug08
 export appdir=cfv3_git_Aug12_cice6
 export appdir=cfv3_git_Sep15_cice6
#export appdir=cfv3_git_may19_hera
#export appdir=cfv3_git_Jun16

#export cplwav=.true.   # to turn on fv3 and WW3 using coupled exec
#export CPLDWAV=YES
#export cplwav2atm=.true.

else
 app=ufs-weather-model
 app=ufs-s2s-model
 export appdir=fv3_git1230
 export appdir=fv3_feb24
 export appdir=cfv3_git_Aug12_cice6
 export appdir=cfv3_git_Sep15_cice6

#export cplwav=.true.
#export cplwav2atm=.true.
#export CPLDWAV=YES

#export appdir=fv3_git_jan10
#app=ufs-s2s-model
#export appdir=cfv3_git_jan31
fi
if [ $machine = HERA ]; then
#export appdir=cfv3_git_May12
 export appdir=cfv3_git_may13
 export appdir=cfv3_venus/cfv3_git_may02
 export appdir=cfv3_git_may19
 export appdir=cfv3_git_Aug11
 if [ $CICE = CICE6 ] ; then
   export appdir=cfv3_git_Aug12_cice6
   export appdir=cfv3_git_Sep15_cice6
 fi
#export appdir=ufs_compile
#export appdir=ufs_compile2
fi

# export satmedmf=.true.
  export satmedmf=${satmedmf:-.false.}
  export DONST=NO
  export DONST=YES
  export DONST=${DONST:-NO}

if [ ${RUN_CCPP:-YES} = YES ] ; then
 export nn=${nn:-""}
 export CCPPDIR=$EXECBASE/$appdir/${app}$nn/FV3/ccpp
#ICSDIR=$g0nosc/Shrinivas.Moorthi/FV3IC/ICs


#export CCPP_SUITE=FV3_GFS_v15
#export FCSTEXEC=fv3_ccpp.exe
#export CCPP_SUITE=FV3_GFS_v15_ras
#export FCSTEXEC=fv3_ccppr.exe
#export FCSTEXEC=fv3_ccpp15r.exe
#export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_v15plus}
#export FCSTEXEC=fv3_ccpps.exe

#export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_v15plusras}
#export FCSTEXEC=fv3_ccppr.exe

#export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_v16rasmg}
#export FCSTEXEC=fv3_ccpprmd.exe
#export FCSTEXEC=fv3_ccpprm.exe              # RAS, MG3

#export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_v16rasmgshoc}
#export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_rasmgshoc}
#export FCSTEXEC=fv3_ccpprms0.exe             # RAS, MG3, SHOC

if [ $DONST = NO ] ; then
 export CCPP_SUITE=FV3_GFS_cpld_rasmgshoc
else
 export CCPP_SUITE=FV3_GFS_cpld_rasmgshocnsst
fi
if [ $satmedmf = .true. ] ; then
 export CCPP_SUITE=FV3_GFS_2017_satmedmf_coupled
 export CCPP_SUITE=FV3_GFS_2017_couplednsst
fi
 export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_v15_rasmgshoc}
 if [ $CPLD_APP = NO ] ; then
  export CCPP_SUITE=FV3_GFS_v15_rasmgshoc
  export CCPP_SUITE=FV3_GFS_2017
  export SCRDIR=$HOMEgfs/scripts
# export FORECASTSH="$SCRDIR/exglobal_fcst_emcufs.sh_feb02"    # with    UGW
  export FCSTEXECDIR=$EXECBASE/$appdir/$app/tests
  export FCSTEXEC=fv3_ccpprms.exe            # RAS, MG3, SHOC
  export FCSTEXEC=fv3_ccpprms.exe            # RAS, MG3, SHOC
  export FCSTEXEC=fcst_fv3_2017.exe
 fi
#export FCSTEXEC=fv3_ccpprms0.exe            # RAS, MG3, SHOC
#export FCSTEXEC=fv3_ccpprmsd.exe            # RAS, MG3, SHOC
#export CCPP_SUITE=${CCPP_SUITE:-FV3_GFS_v15plusras}
#export FCSTEXEC=fv3_ccpprplus.exe           # RAS, MG3, SHOC

 export CCPP_LIB_DIR=${CCPP_LIB_DIR:-$CCPPDIR/lib}
#export RAS=YES
 if [ $CCPP_SUITE = FV3_GFS_v15 ]           ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_v15_ras ]       ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_v15plus ]       ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_v15plusras ]    ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_v16rasmg ]      ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_rasmgshoc ]     ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_v15_rasmgshoc ] ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_v16rasmgshoc ]  ; then export isatmedmf=0 ; fi
 if [ $CCPP_SUITE = FV3_GFS_cpld_rasmgshoc ]  ; then export isatmedmf=0 ; fi

fi

#export IC_FROM=bench2
#export CPC_ICE=YES

#export cplflx=${cplflx:-.false.}
#export cpl=${cpl:-.false.}
 export CPLDFV3_MOM6_CICE=${CPLDFV3_MOM6_CICE:-NO}
 export CPLDWAV=${CPLDWAV:-NO}
 export CPC_ICE=${CPC_ICE:-NO}
if [ $CPC_ICE = YES ] ; then export runid=cpcice ; fi

##############################   To turn on inline post  #################################
if [ $NSOUT -eq 0 -a $INLINE_POST = YES ] ; then
 export WRITE_DOPOST=.true.
fi
export WRITE_DOPOST=${WRITE_DOPOST:-.false.}
if [ $WRITE_DOPOST = .true. ] ; then
 if [ $machine = WCOSS_DELL_P3 ] ; then
  export POSTDIR=/gpfs/dell2/emc/modeling/noscrub/Shrinivas.Moorthi/postdir_mar24/EMC_post
 elif [ $machine = HERA ] ; then
  export POSTDIR=/scratch1/NCEPDEV/global/Shrinivas.Moorthi/save/postdir/EMC_post
 fi
 KPO=${KPO:-57}
 if [ $KPO -eq 47 ] ; then
   export POSTGPVARS=${POSTGPVARS:-"KPO=47,PO=1000.,975.,950.,925.,900.,875.,850.,825.,800.,775.,750.,725.,700.,675.,650.,625.,600.,575.,550.,525.,500.,475.,450.,425.,400.,375.,350.,325.,300.,275.,250.,225.,200.,175.,150.,125.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,"}
 elif [ $KPO -eq 50 ] ; then
   export POSTGPVARS=${POSTGPVARS:-"KPO=50,PO=1000.,975.,950.,925.,900.,875.,850.,825.,800.,775.,750.,725.,700.,675.,650.,625.,600.,575.,550.,525.,500.,475.,450.,425.,400.,375.,350.,325.,300.,275.,250.,225.,200.,175.,150.,125.,100.,70.,50.,40.,30.,20.,15.,10.,7.,5.,3.,2.,1.,0.4"}
 elif [ $KPO -eq 57 ] ; then
   export POSTGPVARS=${POSTGPVARS:-"KPO=57,PO=1000.,975.,950.,925.,900.,875.,850.,825.,800.,775.,750.,725.,700.,675.,650.,625.,600.,575.,550.,525.,500.,475.,450.,425.,400.,375.,350.,325.,300.,275.,250.,225.,200.,175.,150.,125.,100.,70.,50.,40.,30.,20.,10.,7.,5.,4.,3.,2.,1.,0.7,0.5,0.4,0.3,0.2,0.1,0.07,0.05"}
 fi

 export PostFlatFile00=${PostFlatFile00:-postcntrl_gfs_tke_mg3_${KPO}l_00_two.txt}
 export PostFlatFile=${PostFlatFile:-postcntrl_gfs_tke_mg3_${KPO}l_two.txt}

 export LEVS=${LEVS:-65}
 LVER=${LVER:-""}
 if [ $LEVS -gt 65 ] ; then
   export SIGLEVEL=${SIGLEVEL:-$HOMEgfs/fix/fix_am/global_hyblev.l${LEVS}${LVER}.txt}
 else
   export SIGLEVEL=${SIGLEVEL:-$HOMEgfs/fix/fix_am/global_hyblev.l$LEVS.txt}
 fi
fi

###############################################################################################
# DO NOT ADD MACHINE DEPENDENT STUFF BELOW THIS LINE
# IF YOU HAVE TO MAKE MACHINE SPECIFIC CHANGES BELOW
# FEEL FREE TO MOVE THEM ABOVE THIS LINE TO KEEP IT CLEAR
####################################################
# Build paths relative to $HOMEgfs
export HOMEgsi="$HOMEgfs"
export FIXgsi="$HOMEgfs/fix/fix_gsi"
export HOMEfv3gfs="$HOMEgfs/sorc/fv3gfs.fd"
export HOMEpost=${POSTDIR:-$HOMEgfs}
export HOMEobsproc_prep="$BASE_GIT/obsproc/obsproc_prep.iss-46886.fv3gfs"
export HOMEobsproc_network="$BASE_GIT/obsproc/obsproc_global.iss-46886.fv3gfs"
export BASE_VERIF="$BASE_SVN/verif/global/tags/vsdb"

# CONVENIENT utility scripts and other environment parameters
export NCP="/bin/cp -p"
export NMV="/bin/mv"
export NLN="/bin/ln -sf"
export VERBOSE=YES
export KEEPDATA=YES
export KEEPREST=YES
export CHGRP_CMD="chgrp rstprod"
export NEMSIOGET="$HOMEgfs/exec/nemsio_get"
#export Verbosity=max
#export VERBOSITY=9                  # for debug in MOM6

# Machine environment, jobs, and other utility scripts
export BASE_ENV="$HOMEgfs/env"
export BASE_JOB="$HOMEgfs/jobs/rocoto"

# EXPERIMENT specific environment parameters
export SDATE=@SDATE@
export EDATE=@EDATE@
export assim_freq=6
export PSLOT="@PSLOT@"
export CDUMP="@CDUMP@"
export FHCYC="@FHCYC@"
export FHMIN="@FHMIN@"
export warm_start="@WARM_START@"   # for warm_start need to set FHMIN (i.e. starting time)
export EXPDIR="@EXPDIR@/$PSLOT"
export ROTDIR="@ROTDIR@/$PSLOT"
export RUNDIR="$STMP/RUNDIRS/$PSLOT"
export ARCDIR="$NOSCRUB/archive/$PSLOT"
export ICSDIR="@ICSDIR@"
export ATARDIR="/NCEPDEV/$HPSS_PROJECT/5year/$USER/$machine/benchmark1/$PSLOT"
export CDATE
PDY=$(echo $CDATE | cut -c1-8)
cyc=$(echo $CDATE | cut -c9-10)
export ATM_RESTDIR="$ROTDIR/gfs.$PDY/$cyc/ATM_RESTART"
mkdir -p $ATM_RESTDIR
if [ $CPLDFV3_MOM6_CICE = YES ] ; then
 export OCN_RESTDIR="$ROTDIR/gfs.$PDY/$cyc/OCN_RESTART"
 export ICE_RESTDIR="$ROTDIR/gfs.$PDY/$cyc/ICE_RESTART"
 export MED_RESTDIR="$ROTDIR/gfs.$PDY/$cyc/MED_RESTART"
 export OCN_OUTDIR="$ROTDIR/gfs.$PDY/$cyc/OCN_HISTORY"
 export ICE_OUTDIR="$ROTDIR/gfs.$PDY/$cyc/ICE_HISTORY"
 mkdir -p $OCN_RESTDIR
 mkdir -p $ICE_RESTDIR
 mkdir -p $MED_RESTDIR
 mkdir -p $OCN_OUTDIR
 mkdir -p $ICE_OUTDIR
fi
if [ $CPLDWAV = YES ] ; then
 export WW3_RESTDIR="$ROTDIR/gfs.$PDY/$cyc/WW3_RESTDIR"
 export WW3_OUTDIR="$ROTDIR/gfs.$PDY/$cyc/WW3_HISTORY"
 mkdir -p $WW3_RESTDIR
 mkdir -p $WW3_OUTDIR
fi
if [ -d $ROTDIR/gfs. ] ; then rm -rf $ROTDIR/gfs. ; fi

# For coupled
#if [ $machine = HERA ] ; then
# export UGCSICSDIR="/scratch2/stmp/Bin.Li/EMC_ugcs_hycom/ugcsics_cfsv2op"
# export UGCSsrc="/scratch2/stmp/Bin.Li/EMC_ugcs"
#elif [ $machine = WCOSS_DELL_P3 ] ; then
# export UGCSICSDIR="$NOSCRUB/UGCS/ugcsics_cfsv2op"
# export UGCSsrc="$NOSCRUB/EMC_ugcs"
#fi

# Commonly defined parameters in JJOBS
export envir=${envir:-prod}
export NET=gfs
export RUN=${RUN:-${CDUMP:-gfs}}
export jlogfile="${EXPDIR}/logs/jlogfile"
export ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}
export LOGSCRIPT=${LOGSCRIPT:-""}
#export ERRSCRIPT=${ERRSCRIPT:-"err_chk"}
#export LOGSCRIPT=${LOGSCRIPT:-"startmsg"}
export REDOUT="1>"
export REDERR="2>"

export SENDECF=NO
export SENDCOM=NO
export SENDDBN=NO
export SENDSDM=NO

# Resolution specific parameters
if [ $LEVS -eq 128 ] ; then  export LVER=C ; fi
export CASE="@CASECTL@"
export CASE_ENKF="@CASEENS@"

# Surface cycle update frequency
if [ "$CDUMP" == gdas ] ; then
   export FHCYC=1
   export FTSFS=10
elif [ "$CDUMP" == gfs ] ; then
   export FHCYC=${FHCYC:-24}
fi
export FHCYC_GFS=${FHCYC_GFS:-${FHCYC:-24}}
#export FHCYC_GFS=12
#export FHCYC_GFS=6
#export FHCYC=6
#export FHCYC=3
#export FHCYC_GFS=0
#export FHCYC=0

# Output frequency of the forecast model (for cycling)
export FHMIN=${FHMIN:-0}
export FHMAX=9
export FHOUT=6

# GFS cycle info
export gfs_cyc=@gfs_cyc@ # 0: no GFS cycle, 1: 00Z only, 2: 00Z and 12Z only, 4: all 4 cycles.

# GFS output and frequency
export FHMIN_GFS=${FHMIN_GFS:-${FHMIN:-0}}

#export USE_LAST_RESTART=YES
#export restart_ext=.false.

export warm_start=${warm_start:-.true.}   # for warm_start need to set FHMIN (i.e. starting time)
export FH_CHUNK=${FH_CHUNK:-12}
#export FHMIN=1
#export FHMIN=2
#export FHMIN=3
#export FHMIN=6
#export FHMIN=9
#export FHMIN=12
#export FHMIN=21
#export FHMIN=36
#export FHMIN=24
#export FHMIN=45
#export FHMIN=66
#export FHMIN=72
#export FHMIN=84
#export FHMIN=120
#export FHMIN=132
#export FHMIN=168
#export FHMIN=216
#export FHMIN=288
#export FHMIN=360
#export FHMIN=480
#export FHMIN=720
#export FHMIN=1056
#export FHMIN=1080
#export FHMIN=1440
#export FHMIN=1800

 export restart_interval=432000
 export restart_interval=864000
 export restart_interval=1296000
 export restart_interval=864000
#export restart_interval=432000
#export restart_interval=86400
 export restart_interval=43200
#export restart_interval=21600
#export restart_interval=10800
#export restart_interval=7200
#export restart_interval=3600
 export restart_interval_atm=$((restart_interval/3600))

 export FHMAX_GFS_00=48
#export FHMAX_GFS_00=72
#export FHMAX_GFS_00=240
#export FHMAX_GFS_00=120
#export FHMAX_GFS_00=72
#export FHMAX_GFS_00=96
#export FHMAX_GFS_00=36
#export FHMAX_GFS_00=27
#export FHMAX_GFS_00=24
#export FHMAX_GFS_00=15
#export FHMAX_GFS_00=12
#export FHMAX_GFS_00=9
#export FHMAX_GFS_00=6
#export FHMAX_GFS_00=3
#export FHMAX_GFS_00=84
#export FHMAX_GFS_00=93
#export FHMAX_GFS_00=99
#export FHMAX_GFS_00=04
#export FHMAX_GFS_00=03
#export FHMAX_GFS_00=02
#export FHMAX_GFS_00=01
#export FHMAX_GFS_00=240
#export FHMAX_GFS_00=300  # uncomment this line for 45 day run
#export FHMAX_GFS_00=360
#export FHMAX_GFS_00=480
#export FHMAX_GFS_00=840
#export FHMAX_GFS_00=720
#export FHMAX_GFS_00=1080 # uncomment this line for 45 day run
#export FHMAX_GFS_00=1440
#export FHMAX_GFS_00=1800 # uncomment this line for 45 day run
#export FHMAX_GFS_00=2520 # uncomment this line for 45 day run
#export FHMAX_GFS_00=1920 # uncomment this line for 45 day run
#export FHMAX_GFS_00=2160 # uncomment this line for 45 day run
#export FHMAX_GFS_00=2880 # uncomment this line for 45 day run
#export FHMAX_GFS_00=3600 # uncomment this line for 45 day run
#export FHMAX_GFS_00=4560 # uncomment this line for 45 day run
#export FHMAX_GFS_00=6240 # uncomment this line for 45 day run
#export FHMAX_GFS_00=6960 # uncomment this line for 45 day run
#export FHMAX_GFS_00=7200 # uncomment this line for 45 day run
#export FHMAX_GFS=1080
#export FHMAX_GFS_00=1440

 export FHMAX_GFS_12=0
 export FHMAX_GFS_06=0
 export FHMAX_GFS_18=0
 export FHMAX_GFS=$(eval echo \${FHMAX_GFS_$cyc})
 export FH_CHUNK=${FH_CHUNK:-$FHMAX_GFS}

 export FHOUT_GFS=3
#export FHOUT_GFS=6
#export FHOUT_GFS=1
#export FHOUT_GFS=0.125
 export FHOUT=$FHOUT_GFS
 export FHOUT_O=6            # ocan history output frequency
 export FHOUT_O=3            # ocan history output frequency
 export OCN_AVG=NO
#export OCN_AVG=YES


#BL2018
export FHMAX_HF_GFS=$FHMAX_GFS_00
export FHOUT_HF_GFS=$FHOUT_GFS

#if [ $NSOUT -gt 0 ] ; then
# export FHOUT_HF_GFS=0
# export FHOUT_HF_GFS=-1
#fi

# Output for coldstart only 1 hour
export FHMAX_COLD=1

# I/O QUILTING, true--use Write Component; false--use GFDL FMS
# if quilting=true, choose OUTPUT_GRID as cubed_sphere_grid in netcdf or gaussian_grid
# if gaussian_grid, set OUTPUT_FILE for nemsio or netcdf
#export QUILTING=.true.
#export OUTPUT_GRID=gaussian_grid
#export OUTPUT_FILE=netcdf
export QUILTING=${QUILTING:-.true.}
export OUTPUT_GRID=${OUTPUT_GRID:-gaussian_grid}
export OUTPUT_FILE=${OUTPUT_FILE:-nemsio}

# Microphysics Options: 99-ZhaoCarr, 8-Thompson; 6-WSM6, 10-MG, 11-GFDL
if [ $satmedmf = .true. ] ; then
 export imp_physics=99
 export RAS=NO
 export SHOC=NO
 export CSAW=NO
 export isatmedmf=0
 export oz_phys=.true.
 export oz_phys_2015=.false.
else
 export imp_physics=10
 export MGVER=2
#export imp_physics=99
#export imp_physics=11
#export MGVER=-1
 export RAS=YES
 export SHOC=YES
#export CSAW=YES

#export RAS=NO
#export SHOC=NO
#export CSAW=NO
fi
#export do_ugwp=.false.

# CPL
#export imp_physics=99

# Shared parameters
# Hybrid related
export DOHYBVAR=YES
export NMEM_ENKF=@NMEM_ENKF@
export SMOOTH_ENKF=YES
export l4densvar=.false.
export lwrite4danl=.false.

# EnKF output frequency
if [ $DOHYBVAR = YES ] ; then
    export FHMIN_ENKF=3
    export FHMAX_ENKF=9
    if [ $l4densvar = .true. ] ; then
        export FHOUT=1
        export FHOUT_ENKF=1
    else
        export FHOUT_ENKF=3
    fi
fi
export SCRDIR=$HOMEgfs/scripts
#FORECASTSH="$SCRDIR/exglobal_fcst_nemsfv3_res.sh"   # with    UGW
 export FORECASTSH=${FORECASTSH:-"$SCRDIR/exglobal_fcst_emcufs.sh"}    # with    UGW
if [ $CPLD_APP = YES ] ; then
# export FCSTEXECDIR="$HOMEgfs/exec"
# export FCSTEXEC="nems_fv3_mom6_cice5.ccppo"
# export FCSTEXECDIR=$EXECBASE/$appdir/$app/NEMS/exe
# export FCSTEXEC="NEMS.x"
  export FCSTEXECDIR=${FCSTEXECDIR:-$EXECBASE/$appdir/$app/tests}
# export model_name=fv3_mom6_cice_nemsland
# export model_name=fcst_${mediator}_$CICE
  export model_name=fcst_${mediator}_${CICE}$IPD
# export model_name=fcst_${mediator}_${CICE}o
# export model_name=fv3_mom6_cice_nemsland
# export model_name=fcst_nems_debug
  export FCSTEXEC=${FCSTEXEC:-$model_name.exe}
# export MODULES_TO_USE="modules.${model_name}"

elif [ $RUN_CCPP = NO ] ; then
# g0nosc=/gpfs/dell2/emc/modeling/noscrub
# export FCSTEXECDIR=$g0nosc/Shrinivas.Moorthi/fv3_git1104/ufs-weather-model3/tests
# export FCSTEXECDIR=$g0nosc/Shrinivas.Moorthi/fv3_git1230/ufs-weather-model/tests
  export FCSTEXECDIR=$EXECBASE/$appdir/$app/tests
  export FCSTEXEC="fv3_5.exe"
  export isatmedmf=0
fi

if [ ${NUMOM:-NO} = NO ] ; then
 export MIN_Z_DIAG_INTERVAL=21600
#Z_OUTPUT_GRID_FILE="analysis_vgrid_lev35.v1.nc"
 export Z_OUTPUT_GRID_FILE="interpolate_zgrid_40L.nc"
fi

if [ $CPLDFV3_MOM6_CICE = YES ] ; then
  if [ $mediator = cmeps ] ; then
    if [ $CICE = CICE5 ] ; then
      export CPLPREPSH=$HOMEgfs/scripts/prep_coupled_fcst_emcufs_cmeps.sh
    else
      export CPLPREPSH=$HOMEgfs/scripts/prep_coupled_fcst_emcufs_cmeps_cice6.sh
    fi
    export CMEPS_DIR=${CMEPS_DIR:-$EXECBASE/$appdir/$app/CMEPS}
  else
    export CPLPREPSH=$HOMEgfs/scripts/prep_coupled_fcst_emcufs.sh
  fi
# export CPLPREPSH=$HOMEgfs/scripts/prep_coupled_fcst_res.sh
# export CPLPREPSH=$HOMEgfs/scripts/prep_coupled_fcst.sh
# If YES, NSST is turned on in anal and/or fcst steps
# export DONST=NO
# export DONST=YES

# The switch to apply SST elevation correction or not
  export nst_anl=.false.
else
  if [ $mediator = cmeps ] ; then
    export CMEPS_DIR=${CMEPS_DIR:-$EXECBASE/$appdir/$app/CMEPS}
  fi
fi
# CPL
#export nst_anl=.false.

# Analysis increments to zero in CALCINCEXEC
export INCREMENTS_TO_ZERO="'delz_inc','clwmr_inc','icmr_inc'"


# Archiving options
export HPSSARCH=YES        # save data to HPSS archive
export ARCH_CYC=00         # Archive data at this cycle for warm_start capability. Cannot be 00
export ARCH_WARMICFREQ=5   # Archive frequency in days for warm_start capability
export ARCH_FCSTICFREQ=1   # Archive frequency in days for gdas and gfs forecast-only capability

export DONST=${DONST:-YES}
export nst_anl=${nst_anl:-.true.}

echo "END: config.base"
